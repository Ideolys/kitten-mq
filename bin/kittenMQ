#!/usr/bin/env node
const { exec } = require('child_process');
const broker   = require('../lib/broker/index');
const path     = require('path')
const fs       = require('fs');

const projectDirectory = path.join('/var', 'www', 'kitten-mq');
const pidPath          = path.join(projectDirectory, 'pid');

let _args     = process.argv.slice(2);
let _commands = ['start', 'reload'];

function printUsage () {
  console.log('kitten-mq broker')
  console.log('===============================================');
  console.group('Commands');
  console.log('start'  , '\t', 'Start the broker'               );
  console.log('reload' , '\t', 'Reload the broker configuration');
  console.groupEnd('Commands');
}

if (_commands.indexOf(_args[0]) === -1) {
  return printUsage();
}

const _configPath = path.join(projectDirectory, 'kitten-mq.config.json');
if (_commands.indexOf(_args[0]) === 0) {
  let _broker = broker(_configPath, true);
  _broker.start(() => {
    fs.writeFileSync(pidPath, process.pid);
  });

  process.on('SIGUSR2', () => {
    _broker.reload();
  });
}

if (_commands.indexOf(_args[0]) === 1) {
  return fs.stat(pidPath, err => {
    if (err) {
      return;
    }

    let pid = fs.readFileSync(pidPath, 'utf8');

    exec('kill -USR2 ' + pid);
  });
}
